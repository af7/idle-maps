!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("react")):"function"==typeof define&&define.amd?define(["react"],e):"object"==typeof exports?exports.IdleMaps=e(require("react")):t.IdleMaps=e(t.React)}(this,function(t){return function(t){function e(o){if(n[o])return n[o].exports;var i=n[o]={exports:{},id:o,loaded:!1};return t[o].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){"use strict";var o=n(1),i=n(3),r=n(2);t.exports={GoogleMapsApiMixin:o,MapInstanceMixin:i,OverlayViewMixin:r}},function(t,e,n){"use strict";var o=n(4).MapLoader;t.exports={componentWillMount:function(){o.load({key:this.props.apiKey,version:this.props.apiVersion})}}},function(t,e,n){"use strict";var o=n(4).BaseOverlayFactory;t.exports={componentDidMount:function(){var t=this.getDOMNode();o.create({point:this.props.point,el:t,map:this.props.map})}}},function(t,e,n){"use strict";var o=n(4).MapLoader,i=n(5);t.exports={componentDidMount:function(){o.create(this.getDOMNode(),this.props.mapOptions).then(function(t){this.idle(t)}.bind(this))},render:function(){return i.createElement("div",{className:"map-container"},i.createElement("div",{className:"test"}))}}},function(t,e,n){"use strict";var o=n(6),i=n(7);t.exports={MapLoader:o,BaseOverlayFactory:i}},function(e){e.exports=t},function(t,e,n){(function(e){"use strict";function o(t){return f+"?v="+t.version+"&key="+t.key+"&callback="+l}function i(t,e){p={resolve:t,reject:e}}function r(){u=new Promise(function(t,e){i(t,e)})}function s(t){document.addEventListener("DOMContentLoaded",function(){document.head.appendChild(t)})}function a(t){var e=document.createElement("script");e.src=o(t),e.type="text/javascript",s(e)}function c(){r()}var p,u,f="//maps.googleapis.com/maps/api/js",l="mapLoaded";e[l]=function(){p.resolve()},c(),t.exports={load:function(t){return a(t),u},loaded:function(){return u}(),create:function(t,e){return new Promise(function(o){u.then(function(){var i=n(8),r=new i.maps.Map(t,e);i.maps.event.addListenerOnce(r,"idle",function(){o(r)})})})}}}).call(e,function(){return this}())},function(t,e,n){"use strict";var o=n(6);t.exports={create:function(t){o.loaded.then(function(){var e=n(9),o=new e(t);o.setMap(t.map)})}}},function(t,e){(function(e){"use strict";t.exports=e.google}).call(e,function(){return this}())},function(t,e){(function(e){"use strict";function n(){var t=this.getPanes();t.overlayLayer.appendChild(this.el)}function o(t){var e=this.el.offsetHeight,n=this.el.offsetWidth;this.el.style.top=t.y-e+"px",this.el.style.left=t.x-Math.floor(n/2)+"px"}function i(){var t=this.getProjection(),e=t.fromLatLngToDivPixel(this.point);o.call(this,e)}function r(t){var e=t.point;this.el=t.el,this.point=new s.maps.LatLng(e.lat,e.lng),this.el.style.position="absolute"}var s=e.google;r.prototype=Object.create(s.maps.OverlayView.prototype),r.prototype.constructor=r,r.prototype.onAdd=n,r.prototype.draw=i,t.exports=r}).call(e,function(){return this}())}])});